fun main() {
    let contents = load_file("foo.txt")
}

fun load_file(fname: string) -> string {
    let handle = std::open_file(@alloc: local, fname)

    let contents = handle.read_all_as_string()

    return contents
}



// For the above to work, `read_all_as_string` needs to default to the allocator
// to the caller and not to `self`. `self` would cause the file handle to live
// too long, as it would need to be allocated `caller` rather than `local`

fun file::read_all_as_string(self) -> string {
    mut output = ""

    output += self.read_all()

    return output // infers no connection to `self`, so `caller` is chosen
}